/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['defaults.js']) {
  _$jscoverage['defaults.js'] = [];
  _$jscoverage['defaults.js'][9] = 0;
  _$jscoverage['defaults.js'][14] = 0;
  _$jscoverage['defaults.js'][58] = 0;
  _$jscoverage['defaults.js'][112] = 0;
  _$jscoverage['defaults.js'][113] = 0;
  _$jscoverage['defaults.js'][114] = 0;
  _$jscoverage['defaults.js'][115] = 0;
}
_$jscoverage['defaults.js'][9]++;
var internals = {};
_$jscoverage['defaults.js'][14]++;
exports.process = {name: "Hapi Server", process: {}, log: {levels: {info: true, err: true}}, email: {fromName: "Hapi Server", replyTo: "no-reply@localhost", admin: "admin@localhost", server: {}}};
_$jscoverage['defaults.js'][58]++;
exports.server = {tos: {min: "19700101"}, authentication: {loadSessionFunc: null, loadClientFunc: null, loadUserFunc: null, extensionFunc: null, loadGrantFunc: null, removeGrantFunc: null, defaultAlgorithm: "hmac-sha-1", tokenLifetimeSec: 1209600, aes256Keys: {oauthRefresh: "", oauthToken: ""}}, payload: {maxBytes: 1048576}, cors: {maxAge: 86400}, ext: {onPreRoute: (function (req, res, next) {
  _$jscoverage['defaults.js'][112]++;
  next();
}), onPreHandler: (function (req, res, next) {
  _$jscoverage['defaults.js'][113]++;
  next();
}), onPostHandler: (function (req, res, next) {
  _$jscoverage['defaults.js'][114]++;
  next();
}), onPostRoute: (function (req, res, next) {
  _$jscoverage['defaults.js'][115]++;
  next();
})}};
_$jscoverage['defaults.js'].source = ["/*","* Copyright (c) 2012 Walmart. All rights reserved. Copyrights licensed under the New BSD License.","* See LICENSE file included with this code project for license terms.","*/","","","// Declare internals","","var internals = {};","","","// Process configuration","","exports.process = {","","    name: 'Hapi Server',","","    // Process Configuration","","    process: {","","        // runAs: 'www-data',","    },","","    // Logging","","    log: {","","        levels: {","","            info: true,","            err: true","        }","    },","","    // Email Configuration","","    email: {","","        fromName: 'Hapi Server',","        replyTo: 'no-reply@localhost',","        admin: 'admin@localhost',","","        server: {","","            // port: 25,","            // user: '',","            // password: '',","            // host: 'localhost',","            // ssl: false","        }","    }","};","","","// Server configuration","","exports.server = {","","    // tls: {","    //","    //     key: '',","    //     cert: ''","    // },","","    // Terms of Service","","    tos: {","","        min: '19700101'","    },","","    // Authentication","","    authentication: {","","        loadSessionFunc: null,","        loadClientFunc: null,","        loadUserFunc: null,","        extensionFunc: null,","        loadGrantFunc: null,","        removeGrantFunc: null,","","        defaultAlgorithm: 'hmac-sha-1',","        tokenLifetimeSec: 1209600,                  // Two weeks","","        aes256Keys: {","","            oauthRefresh: '',","            oauthToken: ''","        }","    },","","    // Payload","","    payload: {","","        maxBytes: 1024 * 1024","    },","","    // CORS","","    cors: {","","        maxAge: 86400                               // One day","    },","","    // Extensions","","    ext: {","","        onPreRoute: function (req, res, next) { next(); },        // New request, before any middleware","        onPreHandler: function (req, res, next) { next(); },      // Before route handler is called, after validation","        onPostHandler: function (req, res, next) { next(); },     // After route handler returns, before setting response","        onPostRoute: function (req, res, next) { next(); }        // After response sent","    }","};","",""];
